name: Build-and-Upload-Lean's-x86_64-LEDE
on:
  push:
    branches: 
      - master
    paths:
      - 'lean-lede/x86_64/.config'
  schedule:
        - cron: 0 */4 * * *

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Initialization environment.
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        sudo swapoff /swapfile
        sudo rm -f /swapfile
        sudo -E apt-get -qq purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/1orz/My-action/master/.bashrc >> ~/.bashrc
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

    - name: Clone source and install
      run: |
        git clone https://github.com/coolsnowwolf/lede
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Download and Load custom configuration
      run: |
        cd lede
        curl -fsSL https://raw.githubusercontent.com/1orz/My-action/master/lean-lede/x86_64/.config >.config
        bash <(curl -fsSL https://raw.githubusercontent.com/1orz/My-action/master/lean-lede/x86_64/diy.sh)
        ./scripts/feeds install -a
        make defconfig

    - name: Download package
      run: |
        cd lede
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Multi-core compile
      run: |
        cd lede
        echo -e "$(nproc) thread compile"
        df -h
        make -j$(nproc)
        df -h

    - name: Single-core compile
      if: failure()
      run: |
        df -h
        cd lede
        make -j1 V=s
        df -h

    - name: Upload entire bin directory
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: LEDE-x86_64-bin-dictionary
        path: lede/bin

    - name: Setup Upload dictionary
      if: always()
      run: |
        cd lede/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"

    - name: Only Upload firmware (Without packages)
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: LEDE-x86_64_firmware
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to Remote Download Station (Without packages)
      if: always()
      run: |
        cd lede/bin/targets/*/*
        zip -r -o x86_64.zip ./
        curl --socks5 "${{ secrets.PROXY_ADDR }}" -U "${{ secrets.PROXY_USER }}" -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Router/LEDE/x86_64/Lean" -F "file=@x86_64.zip" ${{ secrets.REMOTE_UPLOAD_PROCESSOR }}
